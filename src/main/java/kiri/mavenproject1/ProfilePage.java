/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kiri.mavenproject1;

import java.awt.Component;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import kiri.mavenproject1.entities.Ticket;
import kiri.mavenproject1.entities.User;

/**
 *
 * @author User
 */
public class ProfilePage extends JDialog {
    DBHandle handle;
    User current;
    boolean loginChanged = false;
    boolean fnameChanged = false;
    boolean snameChanged = false;
    boolean emailChanged = false;
    boolean pwChanged = false;
    TicketModel model;
    
    class TicketModel extends AbstractTableModel {
        private List<Ticket> tickets;
        private int selectedRow = -1;
        private String[] cNames = new String[] {"X","Цена","Дата отправления","Станция отправления","Станция прибытия","Поезд"};
        public TicketModel(List<Ticket> tickets) {
            this.tickets = tickets;
        }
        public Ticket getSelectedRow() {
            if (selectedRow!=-1)
                return tickets.get(selectedRow);
            else
                return null;
        }
        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return columnIndex == 0;
        }
        @Override
        public void setValueAt(Object value, int rowIndex, int columnIndex) {
            selectedRow = rowIndex == selectedRow ? -1 : rowIndex;
            for (int i=0; i< getRowCount(); i++)
                this.fireTableCellUpdated(i, 0);
        }
        @Override
        public int getRowCount() {
            return tickets.size();
        }
        @Override
        public int getColumnCount() {
            return cNames.length;
        }
        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Ticket current = tickets.get(rowIndex);
            switch (columnIndex) {
                case 0: return selectedRow == rowIndex;
                case 1: return Float.toString(current.getPrice());
                case 2: return current.getSchedule().getDepartureTime().toString();
                case 3: return current.getDepStation().getName();
                case 4: return current.getArrStation().getName();
                case 5: return current.getSchedule().getTrain().toString();
                default: return "nothing";
            }
        }
        @Override
        public Class<?> getColumnClass(int columnIndex){
            if (columnIndex==0)
                return Boolean.class;
            else
                return String.class;
        }
    }
    /**
     * Creates new form UserPage
     */
    public ProfilePage(DBHandle handle, JFrame owner) {
        super(owner, JDialog.ModalityType.DOCUMENT_MODAL);
        initComponents();
        this.handle = handle;
        loadData();
        loadTicketTable();
    }
    private void loadData() {
        current = handle.getCurrentUser();
        if (current==null) {
            Utils.showMessage(this, "Авторизуйтесь для редактирования", "", false);
            this.setVisible(false);
        }
        this.loginField.setText(current.getLogin());
        this.NameField.setText(current.getFirstname());
        this.surnameField.setText(current.getLastname());
        this.emailField.setText(current.getEmail());
        this.passwordField.setText(current.getPassword());
    }
    private void loadTicketTable() {
        List<Ticket> tickets = handle.getTicketsOfUser(current);
        model = new TicketModel(tickets);
        this.ticketTbl.setModel(model);
    }
    private void saveData() {
        if (loginChanged)
            current.setLogin(loginField.getText());
        if (fnameChanged)
            current.setFirstname(this.NameField.getText());
        if (snameChanged)
            current.setLastname(surnameField.getText());
        if (this.emailChanged)
            current.setEmail(emailField.getText());
        if (pwChanged) {
            char[] pw = passwordField.getPassword();
            current.setPassword(String.valueOf(pw, 0, pw.length));
        }
        handle.updateUser(current);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        loginField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        surnameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ticketTbl = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        returnTicketBtn = new javax.swing.JButton();

        jLabel1.setText("Логин");

        loginField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Имя");

        NameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Фамилия");

        surnameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surnameFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Электронная почта");

        emailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Пароль");

        ticketTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(ticketTbl);

        jLabel6.setText("Купленные билеты");

        saveBtn.setText("Сохранить");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        returnTicketBtn.setText("Вернуть");
        returnTicketBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnTicketBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveBtn)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(emailField)
                        .addComponent(loginField)
                        .addComponent(NameField)
                        .addComponent(surnameField)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel5))
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(returnTicketBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(surnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(returnTicketBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginFieldActionPerformed
        this.loginChanged = true;
    }//GEN-LAST:event_loginFieldActionPerformed

    private void NameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameFieldActionPerformed
        this.fnameChanged = true;
    }//GEN-LAST:event_NameFieldActionPerformed

    private void surnameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surnameFieldActionPerformed
        snameChanged = true;
    }//GEN-LAST:event_surnameFieldActionPerformed

    private void emailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailFieldActionPerformed
        emailChanged = true;
    }//GEN-LAST:event_emailFieldActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        pwChanged = true;
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        try {
            this.saveData();
            Utils.showMessage(this,"Данные успешно сохранены","",false);
            this.setVisible(false);
        } catch (Throwable ex) {
            Utils.traceAllErrors(ex);
            Utils.showMessage(this,"Неправильные данные","Ошибка",true);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void returnTicketBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnTicketBtnActionPerformed
        Ticket ticket = model.getSelectedRow();
        if (ticket==null)
            Utils.showMessage(this, "Не выбран билет", "", true);
        else {
            String message = "Вернуть билет №"+ticket.getId()+"?";
            int result = JOptionPane.showConfirmDialog(this, message, "Возврат билета", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION)
                try {
                    handle.returnTicket(ticket);
                    Utils.showMessage(this, "Билет возвращен", "", false);
                    this.loadTicketTable();
                } catch (IllegalArgumentException ex) {
                    Utils.showMessage(this,ex.getMessage(),"Лол",true);
                }
                catch (Throwable ex) {
                    Utils.traceAllErrors(ex);
                    Utils.showMessage(this,"Неправильные данные","Ошибка",true);
                }
        }
    }//GEN-LAST:event_returnTicketBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NameField;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField loginField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JButton returnTicketBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField surnameField;
    private javax.swing.JTable ticketTbl;
    // End of variables declaration//GEN-END:variables
}
